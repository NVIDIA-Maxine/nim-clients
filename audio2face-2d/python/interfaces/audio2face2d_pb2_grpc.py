# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import audio2face2d_pb2 as audio2face2d__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in audio2face2d_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class Audio2Face2DServiceStub(object):
    """The Audio2Face2DService provides APIs to run the
    Maxine Audio to Face - 2D feature.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Animate = channel.stream_stream(
                '/nvidia.maxine.audio2face2d.v1.Audio2Face2DService/Animate',
                request_serializer=audio2face2d__pb2.AnimateRequest.SerializeToString,
                response_deserializer=audio2face2d__pb2.AnimateResponse.FromString,
                _registered_method=True)


class Audio2Face2DServiceServicer(object):
    """The Audio2Face2DService provides APIs to run the
    Maxine Audio to Face - 2D feature.
    """

    def Animate(self, request_iterator, context):
        """Animate is a bidirectional streaming API to run the
        Audio2Face-2D.

        The input message can contain AnimateConfig or bytes.
        In the beginning of the stream, a request with AnimateConfig should
        be sent to the server to set the feature's parameters.
        The server will echo back a response with the config to signify that the
        parameters were properly set. It is mandatory to set the portrait_image
        config, other configuration parameters are optional and a default value will
        be used if not set. Any AnimateConfig sent during the middle of the stream
        will be ignored.

        After the configuration step, the client streams the input wav file in
        chunks in the input message and receives the output mp4 file in chunks in
        the output message. While the inference is running, the server will periodically
        echo empty message to keep the channel alive. The client should ignore this message.

        It is recommended that the client should pass one file per API invocation.
        The configurations are also set per invocation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Audio2Face2DServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Animate': grpc.stream_stream_rpc_method_handler(
                    servicer.Animate,
                    request_deserializer=audio2face2d__pb2.AnimateRequest.FromString,
                    response_serializer=audio2face2d__pb2.AnimateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nvidia.maxine.audio2face2d.v1.Audio2Face2DService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nvidia.maxine.audio2face2d.v1.Audio2Face2DService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Audio2Face2DService(object):
    """The Audio2Face2DService provides APIs to run the
    Maxine Audio to Face - 2D feature.
    """

    @staticmethod
    def Animate(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/nvidia.maxine.audio2face2d.v1.Audio2Face2DService/Animate',
            audio2face2d__pb2.AnimateRequest.SerializeToString,
            audio2face2d__pb2.AnimateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
